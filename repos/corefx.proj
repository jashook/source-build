<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredHash>ec1b46cd8d2cae3d238bbcc3b204246f432d7ea6</PreferredHash>
  </PropertyGroup>

  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))/dir.props" />

  <PropertyGroup>
    <GlobalJsonFile>$(ProjectDirectory)global.json</GlobalJsonFile>
    <UpdateGlobalJsonToV3Sdk>true</UpdateGlobalJsonToV3Sdk>

    <!-- OSX core-setup build always uses the portable RID, so override it -->
    <OverridePortableBuild>$(PortableBuild)</OverridePortableBuild>
    <OverridePortableBuild Condition="'$(TargetOS)' == 'OSX' OR '$(TargetOS)' == 'Windows_NT'">true</OverridePortableBuild>
    <OverrideTargetRid>$(TargetRid)</OverrideTargetRid>
    <OverrideTargetRid Condition="'$(TargetOS)' == 'OSX'">osx-x64</OverrideTargetRid>
    <OverrideTargetRid Condition="'$(TargetOS)' == 'Windows_NT'">win-x64</OverrideTargetRid>

    <BuildArguments>$(FlagParameterPrefix)configuration $(Configuration)</BuildArguments>
    <BuildArguments>$(BuildArguments) $(FlagParameterPrefix)restore $(FlagParameterPrefix)build $(FlagParameterPrefix)pack</BuildArguments>
    <BuildArguments>$(BuildArguments) /p:SkipTests=true</BuildArguments>
    <BuildArguments>$(BuildArguments) /p:ArchGroup=$(Platform)</BuildArguments>
    <BuildArguments>$(BuildArguments) /p:ConfigurationGroup=$(Configuration)</BuildArguments>
    <BuildArguments>$(BuildArguments) /p:PackageRid=$(OverrideTargetRid)</BuildArguments>
    <BuildArguments>$(BuildArguments) /p:RuntimeOS=$(OverrideTargetRid.Substring(0, $(OverrideTargetRid.IndexOf("-"))))</BuildArguments>
    <BuildArguments>$(BuildArguments) /p:PortableBuild=$(OverridePortableBuild)</BuildArguments>
    <BuildArguments>$(BuildArguments) /p:ToolsDir=$(ToolsDir)</BuildArguments>
    <BuildArguments>$(BuildArguments) /p:EnableSourceLink=false</BuildArguments>
    <BuildArguments>$(BuildArguments) /p:EnableVSTestReferences=false</BuildArguments>
    <BuildArguments>$(BuildArguments) /p:ILLinkTrimAssembly=false</BuildArguments>
    <BuildArguments>$(BuildArguments) /p:RunApiCompat=false</BuildArguments>
    <BuildArguments Condition="'$(TargetOS)' == 'OSX'">$(BuildArguments) /p:MicrosoftNetCoreIlasmPackageRuntimeId=$(OverrideTargetRid)</BuildArguments>

    <LogVerbosityOptOut>true</LogVerbosityOptOut>
    <BuildArguments>$(BuildArguments) $(FlagParameterPrefix)verbosity $(LogVerbosity)</BuildArguments>
    <BuildArguments>$(BuildArguments) $(FlagParameterPrefix)binaryLog</BuildArguments>

    <!--
      Disable node reuse (in the new/Arcade way) to avoid errors like this:

      error MSB4062: The "Microsoft.CodeAnalysis.BuildTasks.Csc" task could not be loaded from the
      assembly .../build/../tools/Microsoft.Build.Tasks.CodeAnalysis.dll. Assembly with same name
      is already loaded
    -->
    <BuildArguments>$(BuildArguments) $(FlagParameterPrefix)nodereuse $(ArcadeFalseBoolBuildArg)</BuildArguments>

    <BuildCommand>$(ProjectDirectory)/build$(ShellExtension) $(BuildArguments)</BuildCommand>
    <BuildCommand Condition="$(Platform.Contains('arm'))">$(ArmEnvironmentVariables) $(BuildCommand)</BuildCommand>

    <OutputPlacementRepoApiImplemented>false</OutputPlacementRepoApiImplemented>
    <PackagesOutput>$(ProjectDirectory)artifacts/packages/$(Configuration)/</PackagesOutput>

    <CleanCommand>$(ProjectDirectory)/clean$(ShellExtension)</CleanCommand>
    <OfficialBuildId>20190424.8</OfficialBuildId>
  </PropertyGroup>

  <ItemGroup>
    <UseSourceBuiltSdkOverride Include="@(ArcadeSdkOverride)" />
    <UseSourceBuiltSdkOverride Condition="'$(TargetOS)' == 'Linux'" Include="@(ILSdkOverride)" />
  </ItemGroup>

  <ItemGroup>
    <RepositoryReference Include="arcade" />
    <RepositoryReference Include="linker" />
    <RepositoryReference Include="coreclr" />
    <RepositoryReference Include="standard" />
  </ItemGroup>

  <ItemGroup>
    <EnvironmentVariables Include="OfficialBuildId=$(OfficialBuildId)" />

    <!-- reset SDK location variables to use 3.0 SDK override -->
    <EnvironmentVariables Remove="DOTNET_TOOL_DIR=$(DotNetCliToolDir)" />
    <EnvironmentVariables Remove="DotNetCoreSdkDir=$(DotNetCliToolDir)" />
    <EnvironmentVariables Remove="DotNetRoot=$(DotNetCliToolDir)" />
    <EnvironmentVariables Remove="_InitializeDotNetCli=$(DotNetCliToolDir)" />

    <EnvironmentVariables Include="DOTNET_TOOL_DIR=$(DotNet3CliToolDir)" />
    <EnvironmentVariables Include="DotNetCoreSdkDir=$(DotNet3CliToolDir)" />
    <EnvironmentVariables Include="DotNetRoot=$(DotNet3CliToolDir)" />
    <EnvironmentVariables Include="_InitializeDotNetCli=$(DotNet3CliToolDir)" />
  </ItemGroup>

  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))/dir.targets" />

  <UsingTask AssemblyFile="$(TasksBinDir)Microsoft.DotNet.SourceBuild.Tasks.dll" TaskName="AddRidToRuntimeJson" />

  <Target Name="UpdateRuntimeGraph"
          BeforeTargets="Build"
          Condition="'$(_IsBootstrapping)' == 'true'">
    <PropertyGroup>
      <RuntimeJsonFile>$(ProjectDirectory)pkg/Microsoft.NETCore.Platforms/runtime.json</RuntimeJsonFile>
    </PropertyGroup>

    <Message Importance="High" Text="Adding rid, $(TargetRid), to $(RuntimeJsonFile)" />
    <AddRidToRuntimeJson RuntimeJson="$(RuntimeJsonFile)"
                         Rid="$(TargetRid)-$(Platform)" />
  </Target>

</Project>
